#!/bin/dash

# Fetch sai2 variables
cdrive=$(cat temp | grep /dev)
auto=$(cat temp | grep partitions)

### FUNCTIONS ###

error() { printf "Something went wrong, maybe it was the script, maybe it was you, who knows."; exit; }

nxt() { echo "Next" | slmenu -p "Continue?"; }

xit() {
xon=$(echo "Continue\\nExit" | slmenu -i -p "$xprompt")
	if [ "$xom" = "exit" ]; then
		echo "Exiting..."
		exit
	fi
}

locale() {
	clear
	echo "Please choose a region from this list"
	rg=$(ls /usr/share/zoneinfo | slmenu -l 10 -p "Choose a region")
	clear
	echo "Please choose a city that has the same time zone as yours."
	ct=$(ls /usr/share/zoneinfo/"$rg" | slmenu -l 10 -p "Choose a city")
	ln -sf /usr/share/zoneinfo/"$rg"/"$ct" /etc/localtime
	hwclock --systohc

	clear
	echo "Please uncoomment 'en_US.UTF-8 UTF-8' and other locals you may need"
	nxt
	nvim /etc/locale.gen
	locale-gen
}

bootmanager() {
	clear
	echo "Would you like to install grub?"
	grb=$(echo "Install Grub\nSkip" | slmenu -p "Install or Skip")
	if [ "$grb" = "Install Grub" ]; then
		if [ "$bs" = "EFI" ]; then
			pacman --noconfirm -S exfat-utils efibootmgr grub
		else
			pacman --noconfirm -S grub
		fi
		grub-install "$cdrive"
		grub-mkconfig -o /boot/grub/grub.cfg
	fi
}

getadduserroot() {
	clear
	echo "Would you like to create a user?"
	cu=$(echo "Create User\nSkip" | slmenu -p "Create User?")
	if [ "$cu" = "Create User" ]; then
		clear
		name=$(echo "user" | slmenu -p "Please enter the name of your new user")
		while ! echo "$name" | grep "^[a-z_][a-z0-9_-]*$" >/dev/null 2>&1; do
			clear
			echo "Username not valid. Give a username beginning with a letter, with only lowercase letters, - or _."
			name=$(echo "" | slmenu -p "Please type a valid username")
		done
		useradd -m -g wheel "$name"
		pmsg="Enter a password for the user"
		sup() { clear; echo "$pmsg"; passwd "$name" || rsup; }
		rsup() { pmsg="The password you entered was incorrect, please enter a new password"; sup; }
		sup
	fi
	clear
	echo "Would you like to set a root password"
	srp=$(echo "Set Root Password\nSkip" | slmenu -p "Set Root Password?")
	if [ "$srp" = "Set Root Password" ]; then
		pmsg="Enter a password for root"
		srp() { clear; echo "$pmsg"; passwd root || rsrp; }
		rsrp() { pmsg="The password you entered was incorrect, please enter a new password"; srp; }
		srp
	fi

}

sudoers() {
	if [ "$cu" = "Create User" ]; then
		clear
		echo "Would you like to edit /etc/sudoers file? | New user is in wheel group"
		es=$(echo "Yes\\nNo" | slmenu -p "Edit /etc/sudoers?")
		if [ "$es" = "Yes" ]; then
			pacman --noconfirm -S sudo
			nvim /etc/sudoers
		fi
	fi
}

wificonfig() {
	clear
	echo "Would you like to enable NetworkManager?"
	en=$(echo "Yes\\nNo" | slmenu -p "Enable NetworkManger?")
	if [ "$en" = "Yes" ]; then
		pacman --noconfirm -Syu networkmanager wireless_tools wpa_supplicant
		systemctl enable NetworkManager.service
	fi
}

cleanup() {
	clear
	pacman -Rdd slmenu neovim dash
	pacman -Rns $(pacman -Qtdq)
	pacman -Syu
}

### THE ACTUAL SCRIPT ###

# Generate the locale and get local time configured
locale || error

# Ask if grub should be installed or if they want to install something else
bootmanager

# Get username and password for the new user, get the root password, set the root passwor, and make the new account
getadduserroot || error

# Ask if they would like to edit /etc/sudoers file
sudoers || error

# Ask if they would like to enable networkmanager
wificonfig || error

# Cleanup the packages on the (new) install
cleanup || error
